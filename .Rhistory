library(lubridate)
?fromJSON
library(jsonlite)
?fromJSON
str(dccrimejsonlite)
dccrimejsonlite[[1]]
dccrimejsonlite[1
]
dccrimejsonlite$features
# Chunk 1: setup
library(dplyr)
library(tidyr)
library(jsonlite)
library(lubridate)
library(leaflet)
# Chunk 1: setup
library(dplyr)
library(tidyr)
library(jsonlite)
library(lubridate)
library(leaflet)
# Chunk 1: setup
library(dplyr)
library(tidyr)
library(jsonlite)
library(lubridate)
library(leaflet)
# Fig. 1
########---------------------------------------------------------------------#>>>
## Retrieve the data in JSON format from opendata.dc.gov using fromJson()
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
## use cbind() combine the list elements and create a dataframe
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
## Seperate and clean lat/long columns but keep original datetime column
## --also separate REPORTDATETIME column
dc_crime_clean <- dc_crime_json %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORTDATETIME, into = c("Date","Time"), sep="T", remove = FALSE)%>%
mutate(Weekday = weekdays(as.Date(REPORTDATETIME)),
DATETIME = ymd_hms(REPORTDATETIME, tz='America/New_York'),
Date = as.Date(Date),
X = as.numeric(gsub("c\\(","",X)),
Y = as.numeric(gsub("\\)","",Y)))
head(dccrimejsonlite)
head(dccrimejsonlite)[1:5]
dccrimejsonlite$type
dccrimejsonlite[1]
dccrimejsonlite[2]
head(dccrimejsonlite$features)
crimejson <- dccrimejsonlite$features
View(crimejson)
crimejson <- as.data.frame(dccrimejsonlite$features)
library(ggplot2)
library(leaflet)
library(dplyr)
library(tidyr)
library(jsonlite)
library(curl)
library(lubridate)
dc_crime_clean <- dc_crime_json %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORTDATETIME, into = c("Date","Time"), sep="T", remove = FALSE)%>%
mutate(Weekday = weekdays(as.Date(REPORTDATETIME)),
DATETIME = strptime(d, tz = "UTC", "%Y-%m-%dT%H:%M:%OSZ"),
Date = as.Date(Date),
X = as.numeric(gsub("c\\(","",X)),
Y = as.numeric(gsub("\\)","",Y)))
dc_crime_clean <- dc_crime_json %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORTDATETIME, into = c("Date","Time"), sep="T", remove = FALSE)%>%
mutate(Weekday = weekdays(as.Date(REPORTDATETIME)),
DATETIME = strptime(REPORTDATETIME, tz = "UTC", "%Y-%m-%dT%H:%M:%OSZ"),
Date = as.Date(Date),
X = as.numeric(gsub("c\\(","",X)),
Y = as.numeric(gsub("\\)","",Y)))
dc_crime_clean$DATETIME = strptime(REPORTDATETIME, tz = "UTC", "%Y-%m-%dT%H:%M:%OSZ")
dc_crime_clean$DATETIME = strptime(dc_crime_clean$REPORTDATETIME, tz = "UTC", "%Y-%m-%dT%H:%M:%OSZ")
View(dc_crime_clean)
shiny::runApp()
dc_crime_clean$DATETIME = as.POSIXct(strptime(dc_crime_clean$REPORTDATETIME, tz = "UTC", "%Y-%m-%dT%H:%M:%OSZ"))
runApp()
str(dc_crime_clean)
leaflet() %>%
addProviderTiles("OpenStreetMap.Mapnik",
options = providerTileOptions(noWrap = TRUE)
) %>%
addMarkers(data = points(),
popup = paste0("<strong>Report Date: </strong>",
dc_crime_clean$DATETIME,
"<br><strong>Offense: </strong>",
dc_crime_clean$OFFENSE,
"<br><strong>method: </strong>",
dc_crime_clean$METHOD,
"<br><strong>shift: </strong>",
dc_crime_clean$SHIFT,
"<br><strong>blocksite address: </strong><br>",
dc_crime_clean$BLOCKSITEADDRESS
),
clusterOptions = markerClusterOptions()
) %>%
addPolygons(data = dchoods,
fillOpacity = 0.2,
color = 'red',
weight = 2.0
)
runApp()
dchoods$Name
hood <- cbind(dchoods$Name,dchoods$Description)
hood
rm(hood)
shiny::runApp()
runApp()
runApp()
View(combo)
View(combo)
View(crimejson)
View(dc_crime_clean)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(off)
View(combo)
View(crimejson)
shiny::runApp()
runApp()
View(dc_crime_clean)
runApp()
dt <- dc_crime_clean %>%
select(Weekday, SHIFT) %>%
summarize(count = n())
dt$Weekday <- factor(dt$Weekday, levels= c("Sunday", "Monday",
"Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
dt[order(dt$Weekday),]
ggplot(dt,aes(x=Weekday,y=count)) +
geom_bar(stat="identity", alpha = 0.3, color='blue', fill='blue') +
facet_grid(.~SHIFT)
View(dt)
runApp()
runApp()
dchoods$Name
dchoods$Description
dchoods$Name
dchoods$Description
dchood@polygons
dchoods@polygons
hood <- cbind(dchood$Name,dchood$Description,dchoods@polygons)
hood <- cbind(dchoods$Name,dchoods$Description,dchoods@polygons)
hood <- cbind(dchoods@data$Name,dchoods@polygons)
View(hood)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dt
runApp()
load("~/Documents/project/DC_Crime_Data/.RData")
runApp()
shiny::runApp()
input$goto
View(dc_crime_clean)
c <- dc_crime_clean
table(c$NEIGHBORHOODCLUSTER)
table(c$BUSINESSIMPROVEMENTDISTRICT)
table(c$DISTRICT)
table(c$PSA)
data.frame(table(c$PSA))
dchoods$Name
library(dplyr)
sapply(c, n_distinct())
sapply(c, n())
n(c$REPORTDATETIME)
n()
apply(c,2,n_distinct())
sapply(c,function(x)length(unique(x)))
x <- as.data.frame(sapply(c,function(x)length(unique(x))))
x
View(x)
dchoods$Description
levels(dchoods$Name)
district
c$DISTRICT
View(jdat)
runApp()
View(hood)
dchoods@data
dchoods@polygons
dchoods@polygons[[1]]
dchoods@polygons$coords
dchoods@polygons@Polygons[[1]]
str(dchoods@polygons)
df  <- data.frame(dchoods@lines[[1]]@Lines[[1]]@coords)
colnames(df) <- c("lon","lat")
hood <- readOGR('dchoods.kml', layer = "KmlFile")
dchoods@polygons[[1]]@Polygons[[1]]@coords
cbind(dchoods$Name[1,],dchoods@polygons[[1]]@Polygons[[1]]@coords)
dchoods@polygons[[1]]@area
dchoods@polygons[[1]]@labpt
dchoods@polygons[[2]]@labpt
cbind(dchoods$Name[1,],dchoods@polygons[[1]]@Polygons[[1]]@labpt)
cbind(dchoods$Name[1,],data.frame(dchoods@polygons[[1]]@Polygons[[1]]@labpt))
dchoods@polygons[[2]]@labpt
install.packages('shapefiles')
library(shapefiles)
mAsList <- by(dchoods,dchoods$Name, function(x) x)
mdf <- do.call(rbind, mAsList)
View(mdf)
labpt <- data.frame(sapply(dchoods@polygons,function(x) dchoods@polygons[[x]]@Polygons[[x]]$labpt))
length(dchoods@polygons@Polygons)
labpt <- data.frame(sapply(dchoods@polygons,function(x) for(i in length(x)) dchoods@polygons[[i]]@Polygons[[i]]$labpt))
for(i in length(x)) dchoods@polygons[[i]]@Polygons[[i]]$labpt))
for(i in length(x)) dchoods@polygons[[i]]@Polygons[[i]]$labpt)
for(i in length(x)) dchoods@polygons[[i]]@Polygons[[i]]$labpt
class(dchoods)
x <- shapefiles::convert.to.simple(dchoods)
??convert.to.simple
install.packages('fortify')
m <- as.data.frame(dchoods)
View(m)
m <- as.data.frame(dchoods,dchoods@polygons)
View(m)
View(m)
m <- as.data.frame(merge(dchoods$Description,dchoods@polygons))
m <- as.data.frame(merge(dchoods$Description,dchoods@polygons@Polygons@coords))
View(dt)
dt <- dc_crime_clean %>%
select(Weekday, SHIFT) %>%
group_by(Weekday, SHIFT) %>%
summarize(count = n())
View(dt)
runApp()
scat <- dc_crime_clean %>%
select(OFFENSE, DATETIME) %>%
group_by(OFFENSE, DATETIME) %>%
summarize(count = n())
View(scat)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
scat <- dc_crime_clean %>%
select(OFFENSE, Date) %>%
group_by(OFFENSE, Date) %>%
summarize(count = n())
ggplot(scat, aes(x=Date, y=count, color=OFFENSE))+
geom_point()+
ggtitle("Number of Crimes by Day by Offense")
theme(axis.title=element_text(size=10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"),
strip.background = element_rect(fill = "white"),
legend.position = c(1,1))
runApp()
ts <- dc_crime_clean %>%
select(Date) %>%
group_by(Date) %>%
summarize(count = n())
View(ts)
ggplot(ts, aes(x=Date, y=count))+
geom_line()+
ggtitle("Number of Crimes by Day")+
theme(axis.title=element_text(size=10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"),
strip.background = element_rect(fill = "white"),
legend.position = c(1,1))
runApp()
dc_crime_lite <- dc_crime_clean %>%
select(OFFENSE,SHIFT,DATETIME,Date,X,Y,Weekday)
runApp()
runApp()
runApp()
runApp()
runApp()
ts
tail(ts)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
View(dc_crime_json)
runApp()
rm(list=ls())
runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
library(ggplot2)
library(leaflet)
library(dplyr)
library(tidyr)
library(jsonlite)
library(curl)
library(lubridate)
library(rgdal)
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
## use cbind() combine the list elements and create a dataframe
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
## Seperate and clean lat/long columns but keep original datetime column
## --also separate REPORTDATETIME column
dc_crime_lite <- dc_crime_json %>%
select(OFFENSE,SHIFT,REPORTDATETIME,BLOCKSITEADDRESS,METHOD,coordinates) %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORTDATETIME, into = c("Date","Time"), sep="T", remove = FALSE)%>%
mutate(Weekday = weekdays(as.Date(REPORTDATETIME)),
Date = as.Date(Date),
X = as.numeric(gsub("c\\(","",X)),
Y = as.numeric(gsub("\\)","",Y)))
dc_crime_lite$DATETIME = as.POSIXct(strptime(dc_crime_lite$REPORTDATETIME, tz = "UTC", "%Y-%m-%dT%H:%M:%OSZ"))
shiny::runApp()
View(dc_crime_lite)
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
dc_crime_lite <- dc_crime_json %>%
select(OFFENSE,SHIFT,REPORTDATETIME,BLOCKSITEADDRESS,METHOD,coordinates) %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORTDATETIME, into = c("Date","Time"), sep="T", remove = FALSE)%>%
mutate(Weekday = weekdays(as.Date(REPORTDATETIME)),
Date = as.Date(Date),
X = as.numeric(gsub("c\\(","",X)),
Y = as.numeric(gsub("\\)","",Y)))
View(dc_crime_json)
View(dc_crime_lite)
runApp()
View(dc_crime_json)
runApp()
shiny::runApp()
View(dc_crime_lite)
dc_crime_lite$X
shiny::runApp()
View(dc_crime_json)
View(dc_crime_lite)
View(dc_crime_json)
View(dc_crime_json)
shiny::runApp()
runApp()
?head
library(dplyr)
library(tidyr)
library(jsonlite)
library(lubridate)
library(leaflet)
print(head(dc_crime_clean,n=4))
# Fig. 1
########---------------------------------------------------------------------#>>>
## Retrieve the data in JSON format from opendata.dc.gov using fromJson()
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
## use cbind() combine the list elements and create a dataframe
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
## Seperate and clean lat/long columns but keep original datetime column
## --also separate REPORTDATETIME column
dc_crime_clean <- dc_crime_json %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORT_DAT, into = c("Date","Time"), sep="T", remove = FALSE)%>%
mutate(Weekday = weekdays(as.Date(REPORT_DAT)),
DATETIME = ymd_hms(REPORT_DAT, tz='America/New_York'),
Date = as.Date(Date),
X = as.numeric(gsub("c\\(","",X)),
Y = as.numeric(gsub("\\)","",Y)))
print(head(dc_crime_clean,n=4))
runApp()
runApp()
runApp()
runApp()
runApp()
ibrary(rgdal)
library(ggplot2)
library(maptools)
library(dplyr)
library(ggmap)
library(leaflet)
library(xml2)
# jsonlite
## AUTOMATION OF DC Crime Last 30 Days Data
########---------------------------------------------------------------------#>>>
library(jsonlite)
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- dccrimejsonlite$features$properties
dc_crime_json$BLOCKXCOORD <- dc_crime_json$BLOCKXCOORD/10000
dc_crime_json$BLOCKYCOORD <- dc_crime_json$BLOCKYCOORD/10000
########---------------------------------------------------------------------#>>>
#perform summarisations and grouping
shiny::runApp('shine')
tr <- createDataPartition(dc_crime_lite$DATETIME, p=0.7, list = F)
library(caret)
tr <- createDataPartition(dc_crime_lite$DATETIME, p=0.7, list = F)
tr <- createDataPartition(dc_crime_lite$Weekday, p=0.7, list = F)
runApp()
runApp()
library(ggplot2)
library(leaflet)
library(dplyr)
library(tidyr)
library(jsonlite)
library(curl)
library(lubridate)
library(rgdal)
library(caret)
########---------------------------------------------------------------------#>>>
## Retrieve the data in JSON format from opendata.dc.gov using fromJson()
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
## use cbind() combine the list elements and create a dataframe
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
## Seperate and clean lat/long columns but keep original datetime column
## --also separate REPORT_DAT column
dc_crime_lite <- dc_crime_json %>%
select(OFFENSE,SHIFT,REPORT_DAT,BLOCK,METHOD,coordinates) %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORT_DAT, into = c("Date","Time"), sep="T", remove = FALSE)%>%
mutate(Weekday = weekdays(as.Date(REPORT_DAT)),
Date = as.Date(Date),
X = as.numeric(gsub("c\\(","",X)),
Y = as.numeric(gsub("\\)","",Y)))
dc_crime_lite$DATETIME = as.POSIXct(strptime(dc_crime_lite$REPORT_DAT, tz = "UTC", "%Y-%m-%dT%H:%M:%OSZ"))
dchoods <- readOGR("dchoods.kml", "DC neighborhood boundaries")
View(dc_crime_lite)
as.numeric(dc_crime_lite$Weekday)
dc_crime_lite$Weekday_NUM = as.numeric(as.character(dc_crime_lite$Weekday))
View(dc_crime_lite)
dc_crime_lite$Weekday_NUM = as.numeric(as.factor(dc_crime_lite$Weekday))
View(dc_crime_lite)
dcCrimeML <- sapply(dc_crime_lite, function(x) as.numeric(as.factor(x)))
dcCrimeML[] <- sapply(dc_crime_lite, function(x) as.numeric(as.factor(x)))
dcCrimeML <- as.data.frame()
dcCrimeML <- dc_crime_lite
[]
dcCrimeML[] <- sapply(dc_crime_lite, function(x) as.numeric(as.factor(x)))
View(dcCrimeML)
tr <- createDataPartition(dcCrimeML$Weekday, p=0.7, list = F)
train <- dcCrimeML[tr,]
test <- dcCrimeML[-tr,]
adaM1 <- train(Weekday ~ ., data = train, method="ada")
adaM1
adaM1 <- train(Weekday ~ ., data = train, method="ada")
model_glm <- train(Weekday ~ ., data = train, method="glm")
model_glm$finalModel
glm_results <- predict(model_glm, test)
glm_results$overall[1]
glm_results
print(model_glm)
lm(Weekday ~ ., data=dc_crime_lite)
lm(Weekday ~ ., data=dcCrimeML)
simple = lm(Weekday ~ ., data=dcCrimeML)
simple
simple = lm(Offense ~ ., data=dcCrimeML)
simple = lm(OFFENSE ~ ., data=dcCrimeML)
simple
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='kuttyman', token='70C83BEDE929722FC5FDF3DA56603B69', secret='Iq7Af4LmWK9rZ7mXGOnWxuAVvZ987mVCZjQjlLgg')
runApp()
runApp()
head(dc_crime_clean)
# Chunk 1: cleandata
library(dplyr)
library(tidyr)
library(jsonlite)
library(lubridate)
library(leaflet)
# Fig. 1
########---------------------------------------------------------------------#>>>
## Retrieve the data in JSON format from opendata.dc.gov using fromJson()
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
## use cbind() combine the list elements and create a dataframe
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
## Seperate and clean lat/long columns but keep original datetime column
## --also separate REPORTDATETIME column
dc_crime_clean <- dc_crime_json %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORT_DAT, into = c("Date","Time"), sep="T", remove = FALSE)%>%
mutate(Weekday = weekdays(as.Date(REPORT_DAT)),
DATETIME = ymd_hms(REPORT_DAT, tz='America/New_York'),
Date = as.Date(Date),
X = as.numeric(gsub("c\\(","",X)),
Y = as.numeric(gsub("\\)","",Y)))
runApp()
rsconnect::setAccountInfo(name='kuttyman', token='70C83BEDE929722FC5FDF3DA56603B69', secret='Iq7Af4LmWK9rZ7mXGOnWxuAVvZ987mVCZjQjlLgg')
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
