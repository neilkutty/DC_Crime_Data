class(xmlfile)
plantcat <- xmlSApply(xmltop, function(x) xmlSApply(x, xmlValue))
# Finally, get the data in a data-frame and have a look at the first rows and columns
plantcat_df <- data.frame(t(plantcat),row.names=NULL)
plantcat_df[1:5,1:4]
View(plantcat_df)
xml.url <- "DC_Crime_Atom_Data.R"
xmlfile <- xmlTreeParse(xml.url)
# the xml file is now saved as an object you can easily work with in R:
class(xmlfile)
# Use the xmlRoot-function to access the top node
xmltop = xmlRoot(xmlfile)
plantcat <- xmlSApply(xmltop, function(x) xmlSApply(x, xmlValue))
# Finally, get the data in a data-frame and have a look at the first rows and columns
plantcat_df <- data.frame(t(plantcat),row.names=NULL)
plantcat_df[1:5,1:4]
xmlfile=xmlParse("DC_Crime_Atom_Data.R")
xmlfile=xmlParse("DC_Crime_Atom_Data.R")
xml.url <- "http://data.octo.dc.gov/feeds/crime_incidents/crime_incidents_current.xml"
xml_data <- xmlParse(url)
url <- "http://data.octo.dc.gov/feeds/crime_incidents/crime_incidents_current.xml"
xml_data <- xmlParse(url)
xml_list <- xmlToList(xml_data)
str(head(xml_list))
View(plantcat_df)
dc_crime_2013 <- read.csv('crime_incidents_2013_CSV.csv',header=TRUE)
View(dc_crime_2013)
View(dc_crime_2013)
install.packages('jsonlite')
library(jsonlite)
# From http://data.okfn.org/data/datasets/geo-boundaries-world-110m
geojson <- readLines("http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson", warn = FALSE) %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
install.packages('Leaflet')
install.packages('leaflet')
fromJSON(simplifyVector = FALSE)
library(rjson)
library(rjson)
json_file <- "http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
install.packages("rgdal", type = "source", configure.args = "--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/1.11/unix/bin/gdal-config --with-proj-include=/Library/Frameworks/PROJ.framework/unix/include --with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib")
install.packages("rgeos", type = "source")
install.packages("geojsonio")
library("geojsonio")
library("geojsonio")
install.packages('rgeos')
library("geojsonio")
install.packages('rgeos')
library("geojsonio")
install.packages("geojsonio")
library("geojsonio")
file <- geojson_read(url)
dcrimejson <- "http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson"
dccrimejson <- "http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson"
file <- geojson_read(dccrimejson)
DC_Crime_Last_30_Days <- read.csv("Crime_Incidents__Last_30_Days.csv", header=TRUE)
View(DC_Crime_Last_30_Days)
library(rgdal)
library(ggplot2)
crimesdc <- read.csv("Crime_Incidents__Last_30_Days.csv", header=TRUE)
crimesdc <- read.csv("Crime_Incidents__Last_30_Days.csv", header=TRUE)
ggplot() +  geom_point(data=crimesdc, aes(x=X, y=Y), color="red")
dcmap<-readOGR("district_of_columbia_highway.shp", layer="dchwy")
dcmap<-readOGR("district_of_columbia_highway.shp")
dcmap<-readOGR("district_of_columbia_highway.shp",layer="district_of_columbia_highway.dbf")
dcmap<-readOGR("district_of_columbia_highway.shp",layer="file")
dcmap<-readOGR("district_of_columbia_highway.shp",layer=layer)
library(maptools)
dcmap <- readShapePoly("district_of_columbia_highway.shp")
dcmap <- readShapeSpatial("district_of_columbia_highway.shp")
ggplot() +  geom_point(data=crimesdc, aes(x=X, y=Y), color="red") +
geom_polygon(data=dcmap, aes(x=long, y=lat, group=group))
ggplot() + geom_polygon(data=dcmap, aes(x=long, y=lat, group=group))
ggplot() + geom_polygon(data=dcmap)
dcmap2 <- readShapeSpatial("district_of_columbia_highway.shx")
dcmap2 <- readShapeSpatial("district_of_columbia_highway.dbf")
dcmap2 <- readShapePoints("district_of_columbia_highway.dbf")
dcmap2 <- readShapePoints("district_of_columbia_highway.shp")
dcmap2 <- readShapeLines("district_of_columbia_highway.shp")
ggplot() + geom_polygon(data=dcmap2)
ggplot() + geom_polygon(data=dcmap2, aes(x=long,y=lat,group=group))
dcmap <- readShapeSpatial("Crime_Incidents__Last_30_Days.shp")
ggplot() + geom_polygon(data=dcmap, aes(x=long,y=lat,group=group))
dcmap <- readShapePoints("Crime_Incidents__Last_30_Days.shp")
ggplot() + geom_polygon(data=dcmap, aes(x=long,y=lat,group=group))
ggplot() +  geom_point(data=crimesdc, aes(x=X, y=Y), color="red") +
geom_polygon(data=dcmap, aes(x=long, y=lat, group=group))
dcmap <- readShapePoints("district_of_columbia_highway.shp")
dcmap <- readShapeSpatial("district_of_columbia_highway.shp")
library(dplyr)
library(rgdal)
library(ggplot2)
library(maptools)
library(dplyr)
#DC Crime Data
library(geojsonio)
install.packages('rworldmap')
install.packages('ggmap')
library(ggmap)
ggmap(dcmap)
get_map(location="Washington D.C.")
dc <- get_map(location="Washington D.C.")
plot("dc")
ggmap(dc)
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))
dc <- get_map(location="Washington D.C.",zoom=5)
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))
dc <- get_map(location="Washington D.C.",zoom=1)
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))
dc <- get_map(location="Washington D.C.",zoom=2)
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))
dc <- get_map(location="Washington D.C.",zoom=3)
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))
dc <- get_map(location="Washington D.C.",zoom="auto")
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))
dc <- get_map(location="Washington D.C.",zoom=15)
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))
dc <- get_map(location="Washington D.C.",zoom=12)
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))+scale_colordiscrete()
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
dc <- get_googlemap(location="Washington D.C.",zoom=12)
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
ggmap(dc,base_layer = ggplot(data=crimesdc,aes(x=X,y=Y,color=OFFENSE)))+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
dc <- get_googlemap(location="Washington D.C.",zoom=11)
dc <- get_map(location="Washington D.C.",zoom=11)
ggmap(dc,base_layer = ggplot(data=crimesdc,aes(x=X,y=Y,color=OFFENSE)))+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
ggmap(dc,base_layer = ggplot(data=crimesdc,aes(x=X,y=Y,color=OFFENSE)))
dc <- get_map(location="Washington D.C.",zoom=11.5)
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE,shape=OFFENSE))+scale_color_discrete()
dc <- get_map(location="Washington D.C.",zoom=12)
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE,shape=OFFENSE))+scale_color_discrete()
dc <- get_map(location="Washington D.C.",zoom=13)
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE,shape=OFFENSE))+scale_color_discrete()
ggmap(dc)+geom_point(data=crimesdc,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
ggmap(dc)+geom_point(data=crimesdc,alpha=1/4,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
library(leaflet)
library(leaflet)
m <- leaflet(lng=-77, lat=-38) %>%
addTiles()  # Add default OpenStreetMap map tiles
m <- leaflet() %>%
addTiles(lng=-77, lat=-38)
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng=-77, lat=-38)
m  # Print the map
m <- leaflet() %>% setView(lng = -77, lat = 38, zoom = 12)
m  # Print the map
m <- leaflet() %>% setView(lng = -77.0000, lat = 38.0000, zoom = 12)
m  # Print the map
m + geom_point(data=crimesdc,alpha=1/4,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
m + geom_point(data=crimesdc,alpha=1/4,aes(x=X,y=Y,color=OFFENSE))
ggmap(dc)+geom_point(data=crimesdc,alpha=1/4,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
dc <- get_map(location="Washington D.C.",zoom=14)
ggmap(dc)+geom_point(data=crimesdc,alpha=1/4,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
dc <- get_map(location="Washington D.C.",zoom=11)
ggmap(dc)+geom_point(data=crimesdc,alpha=1/4,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
dc <- get_map(location="Washington D.C.",zoom=12)
ggmap(dc)+geom_point(data=crimesdc,alpha=1/4,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
m <- leaflet() %>% setView(lng = -77.0000, lat = 38.0000, zoom = 12)
m
m <- leaflet()
m
install.packages('leaflet',dependencies = TRUE)
install.packages("leaflet", dependencies = TRUE)
m <- leaflet()
library(leaflet)
m <- leaflet()
m
shiny::runApp()
runApp()
shiny::runApp()
library(rgdal)
library(ggplot2)
library(maptools)
library(dplyr)
library(ggmap)
library(leaflet)
runApp()
ggmap(dc)+geom_point(data=crimesdc,alpha=1/4,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
library(rgdal)
library(ggplot2)
library(maptools)
library(dplyr)
library(ggmap)
library(leaflet)
#DC Crime Data
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(dplyr)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(geojsonio)
dccrimejson <- geojson_read(http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson)
dccrimejson <- geojson_read('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
library(xml2)
xml2::read_xml(dccrimejson)
library(jsonlite)
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
json_file <- lapply(dccrimejsonlite, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
dc_crime_json <- dccrimejsonlite$features
dc_crime_json <- dccrimejsonlite$features$properties
cbind(dc_crime_json$BLOCKXCOORD,dc_crime_json$BLOCKYCOORD)
runApp()
runApp()
runApp()
library(rgdal)
library(ggplot2)
library(maptools)
library(dplyr)
library(ggmap)
library(leaflet)
library(dplyr)
runApp()
View(dc_crime_json)
dc_crime_json$BLOCKXCOORD <- dc_crime_json$BLOCKXCOORD/10000
dc_crime_json$BLOCKYCOORD <- dc_crime_json$BLOCKYCOORD/10000
runApp()
runApp()
dc_crime_json$BLOCKXCOORD <- dc_crime_json$BLOCKXCOORD/100000
dc_crime_json$BLOCKYCOORD <- dc_crime_json$BLOCKYCOORD/100000
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- dccrimejsonlite$features$properties
runApp()
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- dccrimejsonlite$features$properties
runApp()
147037/2000
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- dccrimejsonlite$features$properties
dc_crime_json$BLOCKXCOORD <- dc_crime_json$BLOCKXCOORD/1000
dc_crime_json$BLOCKYCOORD <- dc_crime_json$BLOCKYCOORD/2000
runApp()
runApp()
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- dccrimejsonlite$features$properties
dc_crime_json$BLOCKXCOORD <- dc_crime_json$BLOCKXCOORD/100000
dc_crime_json$BLOCKYCOORD <- dc_crime_json$BLOCKYCOORD/2000
runApp()
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- dccrimejsonlite$features$properties
dc_crime_json$BLOCKXCOORD <- dc_crime_json$BLOCKXCOORD/10000
dc_crime_json$BLOCKYCOORD <- dc_crime_json$BLOCKYCOORD/2000
runApp()
runApp()
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- dccrimejsonlite$features$properties
dc_crime_json$BLOCKXCOORD <- dc_crime_json$BLOCKXCOORD/10000
dc_crime_json$BLOCKYCOORD <- -dc_crime_json$BLOCKYCOORD/2000
runApp()
runApp()
dccrimejsonlite <- fromJSON('https://maps2.dcgis.dc.gov/dcgis/rest/services/FEEDS/CDW_Feeds/MapServer/8/query?outFields=*&where=1%3D1')
View(dc_crime_json)
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
View(dc_crime_json)
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry$coordinates)
View(dc_crime_json)
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
runApp()
View(dc_crime_json)
library(tidyr)
dc_crime_clean <- dc_crime_json %>%
separate(coordinates, into = c("X", "Y"), sep = ",")
View(dc_crime_clean)
dc_crime_clean$X <- grep("c(","",dc_crime_clean$X)
dc_crime_clean$X <- grep("c\\(","",dc_crime_clean$X)
dc_crime_clean$X <- grep("\\c(","",dc_crime_clean$X)
dc_crime_clean$X <- gsub("\\c(","",dc_crime_clean$X)
dc_crime_clean$X <- gsub("c\\(","",dc_crime_clean$X)
View(dc_crime_clean)
dc_crime_clean$Y <- gsub("\\)","",dc_crime_clean$Y)
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
dc_crime_clean <- dc_crime_json %>%
separate(coordinates, into = c("X", "Y"), sep = ",")
dc_crime_clean$X <- as.numeric(gsub("c\\(","",dc_crime_clean$X))
dc_crime_clean$Y <- as.numeric(gsub("\\)","",dc_crime_clean$Y))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
offenses <- distinct(dc_crime_json$OFFENSE)
library(rgdal)
library(ggplot2)
library(maptools)
library(dplyr)
library(ggmap)
library(leaflet)
library(dplyr)
library(curl)
offenses <- distinct(dc_crime_json$OFFENSE)
offenses <- distinct(select(dc_crime_json,OFFENSE))
offenses <- distinct(select(dc_crime_json,OFFENSE))
row.names(offenses) <- offenses$OFFENSE
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fil_set <- dc_crime_clean
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rgdal)
library(ggplot2)
library(maptools)
library(dplyr)
library(ggmap)
library(leaflet)
View(dc_crime_clean)
dc_crime_clean$Date <- as.Date(as.character(dc_crime_clean$REPORTDATETIME), "%d-%b-%y")
library(tidyr)
dc_crime_clean <- dc_crime_json %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORTDATETIME, into = c("Date","Time"), sep="T")
dc_crime_clean$Date <- as.Date(as.character(dc_crime_clean$Date), "%d-%b-%y")
dc_crime_clean <- dc_crime_json %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORTDATETIME, into = c("Date","Time"), sep="T")
dc_crime_clean$Date2 <- as.Date(as.character(dc_crime_clean$Date), "%y-%d-%b")
dc_crime_clean$Date2 <- as.Date(dc_crime_clean$Date, "%y-%d-%b")
dc_crime_clean$Date2 <- as.Date(dc_crime_clean$Date, "%Y-%d-%b")
ggmap(dc)+geom_point(data=crimesdc,alpha=1/4,aes(x=X,y=Y,color=OFFENSE))+scale_color_discrete()
shiny::runApp()
library(rgdal)
library(ggplot2)
library(maptools)
library(dplyr)
library(ggmap)
library(leaflet)
library(dplyr)
library(tidyr)
library(curl)
dc_crime_clean$Date2 <- as.Date(dc_crime_clean$Date)
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
View(dc_crime_clean)
shiny::runApp()
View(dc_crime_clean)
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
offenses <- distinct(select(dc_crime_json,OFFENSE))
row.names(offenses) <- offenses$OFFENSE
##  Seperate and clean lat/long columns
## --also separate REPORTDATETIME column
library(tidyr)
dc_crime_clean <- dc_crime_json %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORTDATETIME, into = c("Date","Time"), sep="T")
dc_crime_clean$X <- as.numeric(gsub("c\\(","",dc_crime_clean$X))
dc_crime_clean$Y <- as.numeric(gsub("\\)","",dc_crime_clean$Y))
#Create date column from datetime
dc_crime_clean$Date2 <- as.Date(dc_crime_clean$Date)
View(dc_crime_clean)
runApp()
runApp()
runApp()
shiny::runApp()
library(jsonlite)
dccrimejsonlite <- fromJSON('http://opendata.dc.gov/datasets/dc3289eab3d2400ea49c154863312434_8.geojson')
dc_crime_json <- cbind(dccrimejsonlite$features$properties,dccrimejsonlite$features$geometry)
## Get distinct Offenses for shiny input
offenses <- distinct(select(dc_crime_json,OFFENSE))
row.names(offenses) <- offenses$OFFENSE
##  Seperate and clean lat/long columns
## --also separate REPORTDATETIME column
library(tidyr)
dc_crime_clean <- dc_crime_json %>%
separate(coordinates, into = c("X", "Y"), sep = ",")%>%
separate(REPORTDATETIME, into = c("Date","Time"), sep="T")
dc_crime_clean$X <- as.numeric(gsub("c\\(","",dc_crime_clean$X))
dc_crime_clean$Y <- as.numeric(gsub("\\)","",dc_crime_clean$Y))
#Create date column from datetime
dc_crime_clean$Date2 <- as.Date(dc_crime_clean$Date)
by_offense <- group_by(dc_crime_clean,OFFENSE,SHIFT)
dc_crime_clean$DateClean <- as.Date(dc_crime_clean$Date)
shiny::runApp()
by_Date <- group_by(dc_crime_clean,DateClean,OFFENSE,SHIFT)
bydate <- group_by(dc_crime_clean,DateClean,OFFENSE,SHIFT)
crimedc_bydate <- summarise(bydate,
count=n())
View(crimedc_bydate)
library(ggvis)
View(crimedc_bydate)
View(dc_crime_clean)
View(dc_crime_json)
shiny::runApp()
runApp()
runApp()
runApp()
View(crimedc_bydate)
install.packages('hmd')
install.packages('hmd')
install.packages('hms')
devtools::install_github("krlmlr/hms")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library(curl)
library(rgdal)
library(ggplot2)
library(maptools)
library(dplyr)
library(ggmap)
library(leaflet)
library(dplyr)
library(jsonlite)
library(tidyr)
library(curl)
library(Rcurl)
install.packages('curl')
install.packages("curl")
shiny::runApp()
runApp()
runApp()
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
```{r setup, include=FALSE}
```
title: "Mapping DC Crime with R and Leaflet"
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: cars
summary(cars)
# Chunk 3: pressure
plot(pressure)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: cars
summary(cars)
# Chunk 3: pressure
plot(pressure)
library(rmarkdown)
runApp()
library(rgdal)
library(ggplot2)
library(maptools)
library(dplyr)
library(ggmap)
library(leaflet)
library(dplyr)
library(jsonlite)
library(tidyr)
library(curl)
View(dc_crime_clean)
install.packages('rgeos')
